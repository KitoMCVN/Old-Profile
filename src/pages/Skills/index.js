import React, { useState, useEffect } from "react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faStar as brandStar } from "@fortawesome/free-solid-svg-icons";
import { faStar as regularStar } from "@fortawesome/free-regular-svg-icons";
import Img from "../../components/img";
import htmlIcon from "../../assets/icons/html.svg";
import cssIcon from "../../assets/icons/css.svg";
import javascriptIcon from "../../assets/icons/javascript.svg";
import nodejsIcon from "../../assets/icons/nodejs-dark.svg";
import vscodeIcon from "../../assets/icons/vscode.svg";
import githubIcon from "../../assets/icons/github.svg";
import notepadppIcon from "../../assets/icons/notepadplusplus.svg";
import tailwindIcon from "../../assets/icons/tailwind.svg";
import reactIcon from "../../assets/icons/react.svg";
import typescriptIcon from "../../assets/icons/typescript.svg";
import pythonIcon from "../../assets/icons/python.svg";

class Skill {
  constructor(name, content, img, skillLevel) {
    this.name = name;
    this.content = content;
    this.img = img;
    this.skillLevel = skillLevel;
  }

  render() {
    return (
      <div className='p-2 my-1 bg-slate-100 rounded-xl flex gap-4 items-center'>
        <div className='size-14 min-w-14 rounded-xl overflow-hidden'>
          <Img className='size-full' src={this.img} alt={this.name} />
        </div>
        <div className='w-full group hover:*:whitespace-normal overflow-hidden'>
          <p className='truncate transition-all'>{this.content}</p>
          <p className='group-hover:hidden text-sm'>
            {this.skillLevel.map((level, index) => (
              <FontAwesomeIcon key={index} icon={level} />
            ))}
          </p>
        </div>
      </div>
    );
  }
}

function Skills() {
  useEffect(() => {
    document.title = "üìö - KitoMC";
  }, []);

  const [openCategory, setOpenCategory] = useState(0);

  const toggleCategory = (index) => {
    setOpenCategory(openCategory === index ? null : index);
  };

  const skillList = [
    new Skill("HTML", "HTML: (Ng√¥n ng·ªØ ƒë√°nh d·∫•u si√™u vƒÉn b·∫£n) l√† kh·ªëi x√¢y d·ª±ng üß± c·ªßa c√°ch trang web, s·ª≠ d·ª•ng c√°c th·∫ª ƒë·ªÉ x√°c ƒë·ªãnh c·∫•u tr√∫c v√† n·ªôi dung.", htmlIcon, [
      brandStar,
      brandStar,
      brandStar,
      regularStar,
      regularStar,
    ]),
    new Skill("CSS", "CSS: (Cascading Style Sheets) Ng√¥n ng·ªØ ki·ªÉu t·∫°o b·ªë c·ª•c v√† tr√¨nh b√†y cho HTML, gi√∫p nh√† ph√°t tri·ªÉn thi·∫øt k·∫ø trang web h·∫•p d·∫´n v·ªÅ m·∫∑t h√¨nh ·∫£nh üé®.", cssIcon, [
      brandStar,
      brandStar,
      brandStar,
      regularStar,
      regularStar,
    ]),
    // eslint-disable-next-line
    new Skill("JavaScript", "JavaScript: Ng√¥n ng·ªØ linh ho·∫°t t·∫°o t√≠nh t∆∞∆°ng t√°c ‚ú® v√† ƒë·ªông ü•è cho trang web, mang l·∫°i tr·∫£i nghi·ªám h·∫•p d·∫´n cho ng∆∞·ªùi d√πng.", javascriptIcon, [
      brandStar,
      regularStar,
      regularStar,
      regularStar,
      regularStar,
    ]),
    new Skill("TypeScript", "TypeScript: Ng√¥n ng·ªØ l·∫≠p tr√¨nh m·∫°nh m·∫Ω ƒë∆∞·ª£c x√¢y d·ª±ng tr√™n JavaScript, cung c·∫•p cho b·∫°n c√¥ng c·ª• t·ªët h∆°n ·ªü m·ªçi quy m√¥", typescriptIcon, [
      brandStar,
      regularStar,
      regularStar,
      regularStar,
      regularStar,
    ]),
    new Skill("Python", "Python:  Ng√¥n ng·ªØ c√≥ h√¨nh th·ª©c r·∫•t s√°ng s·ªßa, c·∫•u tr√∫c r√µ r√†ng, thu·∫≠n ti·ªán cho ng∆∞·ªùi m·ªõi h·ªçc l·∫≠p tr√¨nh v√† l√† ng√¥n ng·ªØ l·∫≠p tr√¨nh d·ªÖ h·ªçc", pythonIcon, [
      brandStar,
      regularStar,
      regularStar,
      regularStar,
      regularStar,
    ]),
    new Skill("Tailwind CSS", "Tailwind CSS: Framework CSS ∆∞u ti√™n ti·ªán √≠ch cho ph√©p c√°c nh√† ph√°t tri·ªÉn nhanh ch√≥ng x√¢y d·ª±ng giao di·ªán ng∆∞·ªùi d√πng m√† kh√¥ng c·∫ßn r·ªùi kh·ªèi HTML c·ªßa m√¨nh.", tailwindIcon, [
      brandStar,
      brandStar,
      brandStar,
      regularStar,
      regularStar,
    ]),
    new Skill("ReactJS", "ReactJS: Th∆∞ vi·ªán d√†nh cho giao di·ªán ng∆∞·ªùi d√πng g·ªëc v√† web. X√¢y d·ª±ng giao di·ªán ng∆∞·ªùi d√πng t·ª´ c√°c ph·∫ßn ri√™ng l·∫ª ƒë∆∞·ª£c g·ªçi l√† c√°c component ƒë∆∞·ª£c vi·∫øt b·∫±ng JavaScript.", reactIcon, [
      brandStar,
      regularStar,
      regularStar,
      regularStar,
      regularStar,
    ]),
    new Skill("Node.js", "Node.js: M·ªôt m√¥i tr∆∞·ªùng ch·∫°y JavaScript ph√≠a m√°y ch·ªß üñ•, gi√∫p t·∫°o ra ·ª©ng d·ª•ng web c√≥ kh·∫£ nƒÉng m·ªü r·ªông v√† hi·ªáu qu·∫£.", nodejsIcon, [brandStar, regularStar, regularStar, regularStar, regularStar]),
    new Skill(
      "Visual Studio Code",
      "Visual Studio Code: M·ªôt c√¥ng c·ª• mi·ªÖn ph√≠ ‚ú® v√† m√£ ngu·ªìn m·ªü ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi Microsoft. N√≥ cung c·∫•p nhi·ªÅu t√≠nh nƒÉng v√† ti·ªán √≠ch m·ªü r·ªông cho nhi·ªÅu ng√¥n ng·ªØ l·∫≠p tr√¨nh kh√°c nhau.",
      vscodeIcon,
      [brandStar, brandStar, brandStar, brandStar, regularStar]
    ),
    new Skill("GitHub", "GitHub: N·ªÅn t·∫£ng cung c·∫•p c√°c c√¥ng c·ª• c·ªông t√°c v√† ki·ªÉm so√°t phi√™n b·∫£n, cho ph√©p c√°c nh√† ph√°t tri·ªÉn l∆∞u tr·ªØ üë©‚Äçüíª, ƒë√°nh gi√° v√† qu·∫£n l√Ω kho m√£ cho c√°c d·ª± √°n ph·∫ßn m·ªÅm.", githubIcon, [
      brandStar,
      brandStar,
      regularStar,
      regularStar,
      regularStar,
    ]),
    new Skill("Notepad++", "Notepad++: Tr√¨nh so·∫°n th·∫£o vƒÉn b·∫£n üìù m√£ ngu·ªìn m·ªü v√† mi·ªÖn ph√≠ d√†nh cho Windows. ƒê√¢y l√† m·ªôt c√¥ng c·ª• nh·∫π v√† nhi·ªÅu t√≠nh nƒÉng.", notepadppIcon, [
      brandStar,
      brandStar,
      brandStar,
      brandStar,
      brandStar,
    ]),
  ];

  const categories = [
    {
      name: "Ng√¥n ng·ªØ",
      contents: skillList.slice(0, 5),
    },
    {
      name: "Frameworks & Styling",
      contents: skillList.slice(5, 7),
    },
    {
      name: "C√¥ng c·ª• ph√°t tri·ªÉn",
      contents: skillList.slice(7, 11),
    },
  ];

  return (
    <div className='font-bold text-neutral-800 w-full pb-4'>
      <div className='mb-3 flex text-3xl gap-2 font-bold'>
        <div className='bg-neutral-800 h-[36px] w-2'></div>
        <h2>Skills üîç</h2>
      </div>
      <p>K·ªπ nƒÉng v√† c√¥ng ngh·ªá m√† tui s·ª≠ d·ª•ng ƒë·ªÉ x√¢y d·ª±ng m·ªçi th·ª©. üòä</p>
      <div className='mt-6'>
        {categories.map((category, index) => (
          <div className='border-b-slate-600/40 border-b-[1px] cursor-pointer' key={index}>
            <div onClick={() => toggleCategory(index)}>
              <div className='pt-6 pb-4'>
                <h2 className='text-lg'>
                  {category.name} {openCategory === index ? <span className='text-cyan-600'>-</span> : "+"}
                </h2>
              </div>
              {openCategory === index && (
                <div>
                  {category.contents.map((skill, idx) => (
                    <div key={idx}>{skill.render()}</div>
                  ))}
                </div>
              )}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

export default Skills;
